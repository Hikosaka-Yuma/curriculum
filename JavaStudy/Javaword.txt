■ 開発

◯ウォーターフォール開発
開発手順を1つずつ確認しながら工程を進めていく手法のこと
次の工程に進むと後戻りできないデメリットあり

◯アジャイル開発
大きな単位でシステムを区切ることなく、小単位で実装とテストを繰り返して開発を進めていくこと
従来の開発手法に比べて開発期間が短縮される

○マイグレーション
ソフトウェアやハードウェア、システム、データ、開発言語などを別のプラットフォームに移行したり、新しいシステムに切り替えたりすること

◯デクレーション
直したはずのバグ（プログラムのおかしいところ）が復活していたり、前はなかったはずのバグがあったり、実装したはずの機能がなくなっている状態のこと

◯デプロイ
開発したアプリケーション（機能やサービス）をサーバー上に展開・配置して利用できるようにすることです。

◯コンフリクト
複数の装置やプログラムなどが同じ資源を同時に利用しようとして競合状態になってしまうことを意味する

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿_
■ 環境

◯開発環境（ローカル）
自分のパソコンの中に構築する仮想環境

◯検証環境（ステージング）
最終テスト用に用いる、本番環境と類似のテスト環境

◯本番環境
世の中のエンドユーザが（もしくは、顧客が）使える環境

◯設計書／仕様書
こう有るべきという仕様（決め事）を記載する書類
設計書はその仕様を実現する為に、「どのようなシステム構成にするか？」、「どうやって作るか？」という実現方法を記載した書類

◯要件定義
実装すべき機能や満たすべき性能などを明確にしていく作業のこと

◯基本設計書
情報システム全体を機能単位に分割して、それぞれの機能がどういうものか、どういうことができるものか、機能同士がどうつながるのか決めていく作業
要件定義の後に行う

◯詳細設計書
基本設計で決められた動きを、どうやって実現するかを決めるもの

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿_

■ テスト

◯単体テスト（UT）
1つの「関数」「モジュール」が正常に動作するかテストします。

◯結合テスト（CT／IT）
複数の「関数」「モジュール」を組み合わせて、正常に動作するかテストします。

◯総合テスト（ST）
「システムテスト」のことです。
実際の運用形態に沿ってテストします。

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿

◯エビデンス／証跡
IT業界ではプログラムやシステムの試験の結果や、動作検証を確認したことを証拠として残す

◯データパッチ
プログラムの一部分を更新してバグ修正や機能変更を行うためのデータ

◯Access
Microsoft社が開発し提供しているデータベース管理ソフト

◯マクロ
プログラミング言語と比較して粒度が大きい操作をまとめて自動化したりする機能を指す

◯VBA
複雑な処理の自動化などを行なうことができるプログラミング言語

◯GAS（Google Apps Script）
Googleが提供しているプログラミング環境

◯API
アプリケーションの機能を利用するためのもの（入り口）

◯WEB API
Web上でソフトウエア機能を共有する仕組みのこと Google マップなど

◯REST API
REST と呼ばれる設計原則に従って策定されたもの。APIの設計思想をRESTに従って行う

◯SOAP
コンピュータネットワーク内のWebサービスの実装において、構造化された情報を交換するための通信プロトコルの仕様

◯Ajax
一部の情報をサーバーに送信して、それを受け取り反映させる仕組み

◯XML
XMLは、文章の見た目や構造を記述するためのマークアップ言語の一種

◯JSON
JavaScriptと相性が良い、ファイルの書き方ルール

◯ステータスコード
HTMLを表示する前にブラウザが受信する3桁の番号

◯クロスオリジン
Cross-Origin Resource Sharing の略、日本語訳すると「オリジン間リソース共有」。

◯バリデーション
入力チェック
書式チェック（データの形式チェック）

◯データ連携
アプリケーション、システム、格納先がそれぞれ異なるデータを、垣根を超えて共有・活用することv

◯Daemon
UNIX系のOS（LinuxとかMacとか）における常駐プログラムの呼び名のこと。

◯CRON
UNIX系OSで標準的に利用される常駐プログラム（デーモン）の一種で、利用者の設定したスケジュールに従って指定されたプログラムを定期的に起動してくれるもの

◯バッチ
バッチ処理とは“一定量の(あるいは一定期間の)データを集め、一括処理するための処理方法”です。

◯ログ
コンピュータの利用状況やデータ通信など履歴や情報の記録

◯CSV
データの項目間が「,（カンマ）」で区切られているファイルのこと

◯TSV
各項目間が「タブ」で区切られているテキストデータ

◯プルリクエスト（マージリクエスト）
開発者のローカルリポジトリでの変更を他の開発者に通知する機能

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿_

■ チケット管理ツール

◯asana
ワークマネジメントツール
タスク管理ツール
AsanaはFacebookの共同創業者のダスティン・モスコヴィッツと元Googleエンジニアのジャスティン・ローゼンシュタインが立ち上げた

◯Backlog
ヌーラボ社によって作られたSaaS（Software as a Service）型のプロジェクト管理ツール

◯Jooto
株式会社PR TIMESが提供している、クラウド型のプロジェクト・タスク管理ツール。

◯Readmine
RedmineはWebベースのプロジェクト管理ソフトウェア

◯Trello
付箋のような感覚で使えるタスク管理ツール

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿

■ バージョン管理

◯集中型
複数の作業者が同じファイル群を扱うもの
の利用者が更新操作を行ったことにより，サーバ内のファイルが変更されると，その内容も自分の環境に同期できる

◯分散型
だれもが独立したリポジトリを用意して，他のリポジトリと同期することができる


◯Github
ソフトウェア開発プロジェクトのためのソースコード管理サービス

◯Backlog
バージョン管理システムのGitやSubversionのリポジトリ機能を備えている

◯SourceTree
プログラムのソースコードを管理するGitを簡単に扱うためのツール

◯Tortoise SVN
トータス・エスブイエヌ
クライアントフロントエンドとなるソフトウェア


◯Git Flow
master:
プロダクトとしてリリースするためのブランチ。リリースしたらタグ付けする

release：
リリースブランチは develop ブランチから作成される

develop：
次のリリースのための最新の開発作業の変更が反映されている状態。このブランチが常に最新。

feature：
機能の追跡、製品リリースの準備、製品に起きた問題をすばやく修正すること、などを容易にするためのブランチ。

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿

■ FW／ライブラリ

◯Spring Framework
Javaプラットフォーム向けのオープンソースアプリケーションフレームワーク

◯Struts
Javaでアプリを作成する際にほとんど使用されているアプリケーションフレームワーク

◯JSF（Java Server Faces）
オブジェクト指向プログラミング言語JavaのWebアプリケーションを作るためのフレームワークの一つ。
ユーザーに文字入力や回答を選択するボックスなどのユーザーインターフェースを作ることに特化


◯Bootstrap
Web制作者の作業を楽にする目的で作られた、Webサイト構築用のCSSひな形セットの名前です。JavaScriptでの動的調整も含まれており、実体としてはいくつかのCSSファイルとJavaScriptファイル

◯Flyway
オープンソースのデータベースマイグレーションツール。
データベースの状態をバージョン管理できるようになる。

◯Jackson
Java 用の JSON パーサーライブラリの１つ。
Java オブジェクトと JSON の相互変換とかができる。

◯jQuery
JavaScriptでできることを、より簡単な記法で実現できように設計されたJavaScriptライブラリ

◯Junit
JUnitは、Javaプログラミング言語向けのユニットテストフレームワークであり、回帰テストで大きな役割を果たします。オープンソースのフレームワークで、繰り返し可能な自動テストの作成と実行に使用されます。

◯Log4j
主にデバッグ用ツールとして使用されている。log4jは、Java logging frameworkの一つである

◯Lombok
JavaのボイラープレートコードをシンプルにしてくれるJavaのライブラリです

◯ORM
データベースとオブジェクト指向プログラミング言語の間の非互換なデータを変換するプログラミング技法である

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿

■ 連絡ツール

◯ChatWork
Chatwork株式会社が提供するクラウド型ビジネスチャットツールである。メッセージのやりとりだけでなく、タスク管理やファイル共有、ビデオ通話などが可能

◯Slack
Slackは、スチュワート・バターフィールドによって開発されたチームコミュニケーションツール

◯IP Messenger
白水啓章さんが作られた LAN 用メッセンジャーソフトです。
同じネットワーク内のメンバーを自動認識し、簡単にクライアント同士がリアルタイムに情報交換できる優れたソフトウェア


＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿

■ Java

◯Javadoc
JavaのソースコードからHTML形式のAPI仕様書を生成するもの

◯アノテーション
アノテーションは「注釈」を意味する言葉で、Javaを書くときに大切な情報をコメントできるものです。

メモリ管理
◯ヒープ
New世代領域、Old世代領域およびPermanent世代領域に大別され、Java VMが管理・制御

◯GC
ガベージコレクション
プログラムの処理後、不要となった情報（＝メモリに残ったゴミ）を自動で削除（＝開放）してくれる機能。

◯GoF
オブジェクト指向による設計（デザインパターン）の基本23パターンをまとめたもの

◯デザインパターン
オブジェクト指向で開発を行うにあたり、再利用性の高いクラスやライブラリが重要になる。これに対する指針(Gof）のこと。

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿

■ その他

◯オブジェクト指向
モノ（オブジェクト）に振る舞い（メソッド）を与えるプログラミングの考え方。
オブジェクトとは、クラスから生成されたインスタンスのこと。
コードの書き換えが容易であり、プログラミングの認識も共有しやすい一方、コードが几帳になりがちなので、再利用しやすいコードの記述がマストとなる。

◯バッチ処理
バッチ（Batch）は「ひと束」「一群」「1回分にまとめる」という意味で、バッチ処理はあらかじめ登録した一連の処理を自動的に実行する処理方式を指す

◯コンパイル
プログラミング言語で書かれた文字列（ソースコード）を、コンピュータ上で実行可能な形式（オブジェクトコード）に変換することです。

◯カバレッジ
カバーしている範囲のこと。
テストカバレッジとなると、テスト全体に対する確認（カバー）済みの範囲のこと。

◯プラットホーム
ある機器やソフトウェアを動作させるのに必要な、基盤となる装置やソフトウェア、サービス等の動作環境のこと。